category: Structure
subcategory: 
description: "

Python's index bracket syntax allows you to easily write expressions that
evaluate to a section, or \"slice,\" of a list. The syntax for getting a slice
of a list looks very similar to the syntax for getting a single item, except
instead of putting a single number inside the square brackets, you put two
numbers, separated by a colon, indicating where the slice should start and
end.<br/><br/>

For example, the expression <b>x[n:m]</b> evaluates to a list that contains
items from index <b>n</b> up to (but not including) index <b>m</b> from a
list <b>x</b>. If <b>n</b> is omitted, it's assumed to be 0, and the slice will
begin at the beginning of the list. If <b>m</b> is omitted, the slice will end
at the end of the list. <br/><br/>

When slice indexes are negative, they follow the same rules for negative
indexes in general (see <ref target=\"indexbrackets\">index brackets</ref> for
more information).<br/><br/>

Slice syntax works with strings as well, and is a convenient way to extract
substrings by numerical index. <br/><br/>

"
syntax: "	<c>sequence</c>[<c>begin</c>:<c>end</c>]"
parameters:
  - label: 'sequence'
    description: "list: string or other sequence"
  - label: 'begin'
    description: "int: index at which to begin the slice"
  - label: 'end'
    description: "int: integer index at which to end the slice"
related:
  - 
