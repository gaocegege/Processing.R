category: Control
subcategory: Iteration
description: "
Controls a sequence of repetitions. In Python, a for loop requires a list function to iterate over. The range() function provides such a list, and accepts arguments in three ways: <br/>
</br>
range(10)       # Creates the list [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] <br/>
range(5, 10)    # Creates the list [5, 6, 7, 8, 9] <br/>
range(5, 10, 2) # Creates the list [5, 7, 9] <br />
</br>
<br />
In the first example above, the <b>for</b> structure is executed 40 times. The for structure loops until it reaches the last element of the list created by range(40): 39. <br />
<br/>
A second type of <b>for</b> structure makes it easier to iterate over each element of a list. The last example above shows how it works. First, define a variable name. This variable name will be assigned to each element of the list in turn as the <b>for</b> moves through the entire list. Then specify the list to iterate over after <b>in</b>, in this case <b>nums</b>. 
"
syntax: "for <c>var</c> in <c>iterable</c>:\n    <c>statements</c>\n\nfor <c>var</c> in <c>iterable</c>:\n    <c>statements</c>"
parameters:
  - label: 'var'
    description: "variable to be assigned to each element of the iterable"
  - label: 'iterable'
    description: "iterable object to loop over"
  - label: 'statements'
    description: "collection of statements executed each time through the loop"
related:
  - while
