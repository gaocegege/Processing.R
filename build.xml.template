<?xml version="1.0"?>
<project name="Processing.R" default="install" basedir="." xmlns:jacoco="antlib:org.jacoco.ant" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <property name="mode.name" value="RLangMode" />

    <!-- Folder to install modes in (probably a folder called "modes" inside your sketchbook folder) -->
    <property name="processing.modes" value="@@modes@@" />

    <!-- Path to your processing executable. -->
    <property name="processing.executable" value="@@executable@@" />

    <!-- Location of processing jars (core.jar, pde.jar, ..) -->
    <property name="processing.classes.core" value="@@core@@" />
    <property name="processing.classes.pde" value="@@pde@@" />

    <!-- Version of the mode -->
    <property name="processing.r.version" value="@@version@@" />

    <!-- Folder -->
    <property name="try" value="try" />
    <property name="mode-lib" value="lib/mode" />
    <property name="test-lib" value="lib/test" />
    <property name="build-lib" value="lib/build" />
    <property name="src" value="src" />
    <property name="build" value="build" />
    <property name="bin" value="bin" />
    <property name="dist" value="dist" />
    <property name="r.core.dir" value="src/rprocessing/r" />

    <!-- Test -->
    <property name="test.build.dir" value="test-output" />
    <property name="test.src.dir" value="src" />
    <property name="result.classes.dir" location="${test.build.dir}" />
    <property name="result.report.dir" location="${test.build.dir}/site/jacoco" />
    <property name="result.exec.file" location="${test.build.dir}/jacoco.exec" />

    <!-- Version control of dependencies -->
    <property name="renjin-version" value="0.8.2411" />
    <property name="java.target.version" value="1.8" />

    <path id="mode-library-classpath">
        <pathelement location="${processing.classes.pde}" />
        <fileset dir="${processing.classes.core}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${mode-lib}">
            <include name="*.jar" />
        </fileset>
    </path>

    <path id="test-library-classpath">
        <fileset dir="${test-lib}">
            <include name="*.jar" />
        </fileset>
    </path>

    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath>
            <path refid="test-library-classpath" />
        </classpath>
    </taskdef>

    <target name="info">
        <echo>This is the R mode for Processing, powered by github.com/gaocegege</echo>
    </target>

    <target name="checkos">
        <condition property="isWindows" value="true">
            <os family="windows" />
        </condition>

        <condition property="isMacOS" value="true">
            <os family="mac" />
        </condition>

        <condition property="isLinux" value="true">
            <and>
                <isfalse value="${isMacOS}" />
                <os family="unix" />
            </and>
        </condition>
    </target>

    <target name="dep" depends="checkos" if="isLinux">
        <echo>The OS platform is Linux X86_64, download corresponding jars from remote.</echo>
        <!-- Maven deps -->
        <path id="maven-ant-tasks.classpath" path="${build-lib}/maven-ant-tasks-2.1.3.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
            uri="antlib:org.apache.maven.artifact.ant"
            classpathref="maven-ant-tasks.classpath" />
        <artifact:remoteRepository id="remote.repository" url="https://nexus.bedatadriven.com/content/groups/public/" />
        <artifact:dependencies filesetId="dependency.fileset"
            versionsId="dependency.versions">
            <remoteRepository refid="remote.repository" />
            <dependency groupId="org.renjin" artifactId="renjin-script-engine" version="${renjin-version}" />
            <dependency groupId="org.renjin" artifactId="renjin-cli" version="${renjin-version}" />
        </artifact:dependencies>
        <copy todir="${mode-lib}">
            <fileset refid="dependency.fileset" />
            <mapper classpathref="maven-ant-tasks.classpath"
                classname="org.apache.maven.artifact.ant.VersionMapper"
                from="${dependency.versions}" to="flatten" />
        </copy>
    </target>

    <target name="build" depends="dep">
        <mkdir dir="build" />
        <javac destdir="build" includeantruntime="false">
            <src path="src/rprocessing" />
            <classpath>
                <path refid="mode-library-classpath" />
            </classpath>
        </javac>
        <copy todir="build">
            <fileset dir="src" excludes="**/*.java" />
        </copy>
    </target>

    <target name="try" depends="build">
        <propertyfile file="build.number" />
        <!-- create the build.number file if it doesn't exist -->
        <buildnumber file="build.number" />
        <mkdir dir="${try}" />
        <jar jarfile="try/${mode.name}.jar" basedir="build">
            <manifest>
                <attribute name="Main-Class" value="rprocessing.Runner" />
            </manifest>
            <zipfileset src="${processing.classes.pde}"/>
            <zipgroupfileset dir="${processing.classes.core}" includes="*.jar" />
            <zipgroupfileset dir="${mode-lib}" includes="**/*.jar" />
        </jar>
    </target>

    <target name="package" depends="build">
        <delete dir="${dist}" />
        <property name="bundle" value="${dist}/${mode.name}" />
        <mkdir dir="${bundle}" />
        <mkdir dir="${bundle}/mode" />
        <mkdir dir="${bundle}/examples" />
        <jar jarfile="${bundle}/mode/${mode.name}.jar" basedir="build" />
        <copy todir="${bundle}">
            <fileset dir="resources/" />
        </copy>
        <copy todir="${bundle}/mode">
            <fileset dir="${mode-lib}" />
        </copy>
        <copy todir="${bundle}/examples">
            <fileset dir="examples/" />
        </copy>
        <!-- TODO: Configure the version in bash script. -->
        <replaceregexp file="${bundle}/mode.properties" flags="g" match="@@mode-version@@" replace="${processing.r.version}" />
        <replaceregexp file="${bundle}/mode.properties" flags="g" match="@@pretty-version@@" replace="${processing.r.version}" />
    </target>

    <target name="install" depends="package">
        <delete dir="${processing.modes}/${mode.name}" />
        <mkdir dir="${processing.modes}/${mode.name}" />
        <copy todir="${processing.modes}/${mode.name}">
            <fileset dir="${dist}/${mode.name}" />
        </copy>
    </target>

    <target name="run" depends="install">
        <exec executable="${processing.executable}" spawn="false" />
    </target>

    <target name="test-compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath>
                <path refid="mode-library-classpath" />
                <path refid="test-library-classpath" />
            </classpath>
        </javac>
    </target>

    <target name="test" depends="test-compile">
        <copy todir="${test.build.dir}/rprocessing/r" >  
            <fileset dir="${r.core.dir}" includes="**"/>  
        </copy> 
        <jacoco:coverage destfile="${result.exec.file}">
            <junit printsummary="on" haltonfailure="yes" fork="true">
                <classpath>
                    <path refid="mode-library-classpath" />
                    <path refid="test-library-classpath" />
                    <pathelement location="${test.build.dir}"/>
                </classpath>
                <formatter type="brief" usefile="false" />
                <batchtest>
                    <fileset dir="${test.src.dir}" includes="**/*Test.java" />
                </batchtest>
            </junit>
        </jacoco:coverage>
    </target>

    <target name="report" depends="test">
        <!--  Step 3: Create coverage report  -->
        <jacoco:report>
            <!--
            This task needs the collected execution data and ... 
            -->
            <executiondata>
                <file file="${result.exec.file}"/>
            </executiondata>
            <!--  the class files and optional source files ...  -->
            <structure name="Processing.R">
                <classfiles>
                    <fileset dir="${result.classes.dir}"/>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${test.src.dir}"/>
                </sourcefiles>
            </structure>
            <!--  to produce reports in different formats.  -->
            <html destdir="${result.report.dir}"/>
            <csv destfile="${result.report.dir}/report.csv"/>
            <xml destfile="${result.report.dir}/report.xml"/>
        </jacoco:report>
    </target>

    <target name="clean">
        <delete dir="${build}" />
        <delete dir="${dist}" />
        <delete dir="${try}" />
        <delete dir="${test.build.dir}" />
    </target>
</project>
