
// Generated by hack/generate-e2e-test.py
package test.e2e.core.function;

import static org.junit.Assert.fail;
import org.junit.Test;
import test.e2e.core.E2eTestBase;

public class BezierTangent1Test extends E2eTestBase {

  public BezierTangent1Test() {
    coreCodeTemplate = "# bezierTangent 1 https://processing.org/reference/bezierTangent_.html\n\nnoFill()\nbezier(85, 20, 10, 10, 90, 90, 15, 80)\nsteps <- 6\nfill(255)\nfor (i in 0:steps) {\n    t <- i/steps\n    # Get the location of the point\n    x <- bezierPoint(85, 10, 90, 15, t)\n    y <- bezierPoint(20, 10, 90, 80, t)\n    # Get the tangent points\n    tx <- bezierTangent(85, 10, 90, 15, t)\n    ty <- bezierTangent(20, 10, 90, 80, t)\n    # Calculate an angle from the tangent points\n    a <- atan2(ty, tx)\n    a = a + PI\n    stroke(255, 102, 0)\n    line(x, y, cos(a) * 30 + x, sin(a) * 30 + y)\n    # The following line of code makes a line inverse of the above line line(x, y,\n    # cos(a)*-30 + x, sin(a)*-30 + y)\n    stroke(0)\n    ellipse(x, y, 5, 5)\n}\n\nsaveFrame(\"%s\")\nexit()\n";
    referenceURI = "https://processing.org/reference/images/bezierTangent_0.png";
  }

  @Test
  public void test() {
    try {
      defaultOperation();
    } catch (Exception exception) {
      System.err.println(exception);
      fail("Should not have thrown any exception");
    }
  }
}
